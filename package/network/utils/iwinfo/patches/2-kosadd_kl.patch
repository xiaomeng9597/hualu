--- a/iwinfo_cli.c	2018-06-13 23:41:42.793956000 +0800
+++ b/iwinfo_cli.c	2018-06-14 00:00:36.280198140 +0800
@@ -37,9 +37,9 @@
 	static char buf[IWINFO_ESSID_MAX_SIZE+3];
 
 	if (ssid && ssid[0])
-		snprintf(buf, sizeof(buf), "\"%s\"", ssid);
+		snprintf(buf, sizeof(buf), "%s", ssid);
 	else
-		snprintf(buf, sizeof(buf), "unknown");
+		snprintf(buf, sizeof(buf), "kosunknownkos");
 
 	return buf;
 }
@@ -49,7 +49,7 @@
 	static char buf[8];
 
 	if (ch <= 0)
-		snprintf(buf, sizeof(buf), "unknown");
+		snprintf(buf, sizeof(buf), "0");
 	else
 		snprintf(buf, sizeof(buf), "%d", ch);
 
@@ -610,6 +610,98 @@
 }
 
 
+static void print_macssidlist(const struct iwinfo_ops *iw, const char *ifname)
+{
+	int i, x, len;
+	char buf[IWINFO_BUFSIZE];
+	struct iwinfo_scanlist_entry *e;
+
+	if (iw->scanlist(ifname, buf, &len))
+	{
+		printf("Scanning not possible\n\n");
+		return;
+	}
+	else if (len <= 0)
+	{
+		printf("No scan results\n\n");
+		return;
+	}
+	for (i = 0, x = 1; i < len; i += sizeof(struct iwinfo_scanlist_entry), x++)
+	{
+		e = (struct iwinfo_scanlist_entry *) &buf[i];
+ FILE *fpts;
+ char umac[32];
+// char ussid[] = "yuntuisong";
+// char nssid[38] = "\"unknown\"";
+//自定义函数atoi，字符型数字转换为数字型数字
+int atoi(char *s)
+{
+    int t=0;
+   while(*s){
+        t=t*10+*s-'0';
+        s++;
+    }
+    return(t);
+}
+//自定义函数strlwr，大写转换为小写
+char *strlwr(char *str)
+{
+   char *orign=str; 
+   for (; *str!='\0 '; str++)  
+       *str = tolower(*str);
+      return orign;
+}
+if (strcmp(format_ssid(e->ssid),"yuntuisong") == 0&&atoi(format_channel(e->channel)) < 15)
+{
+ sprintf(umac, "/tmp/ssiddata/%s",format_ssid(e->ssid));
+ fpts = fopen(umac,"w+");
+ fprintf(fpts,"%s",format_bssid(e->mac));
+ fclose(fpts);
+}
+ else if (strcmp(format_ssid(e->ssid),"\"unknown\"") != 0)
+{
+ sprintf(umac, "/tmp/ssiddata/%s",strlwr(format_bssid(e->mac)));
+ fpts = fopen(umac,"w+");
+ fprintf(fpts,"%s",format_ssid(e->ssid));
+
+ fclose(fpts);
+//		printf("%s \"%s\"\n",
+//			format_ssid(e->ssid),
+//			strlwr(format_bssid(e->mac)));
+	}
+}
+}
+
+static void print_macssidlists(const struct iwinfo_ops *iw, const char *ifname)
+{
+	int i, x, len;
+	char buf[IWINFO_BUFSIZE];
+	struct iwinfo_scanlist_entry *e;
+
+	if (iw->scanlist(ifname, buf, &len))
+	{
+		printf("Scanning not possible\n\n");
+		return;
+	}
+	else if (len <= 0)
+	{
+		printf("No scan results\n\n");
+		return;
+	}
+
+	for (i = 0, x = 1; i < len; i += sizeof(struct iwinfo_scanlist_entry), x++)
+	{
+		e = (struct iwinfo_scanlist_entry *) &buf[i];
+
+		printf("%02d|%s|%s|%s|%s|%s|%s\n",x,format_bssid(e->mac),format_ssid(e->ssid),IWINFO_OPMODE_NAMES[e->mode],format_channel(e->channel),format_signal(e->signal - 0x100),format_encryption(&e->crypto));
+		
+		
+		
+		
+		
+	}
+}
+
 static void print_txpwrlist(const struct iwinfo_ops *iw, const char *ifname)
 {
 	int len, pwr, off, i;
@@ -887,6 +979,14 @@
 					print_scanlist(iw, argv[1]);
 					break;
 
+				case 'k':
+					print_macssidlist(iw, argv[1]);
+					break;
+
+				case 'l':
+					print_macssidlists(iw, argv[1]);
+					break;
+
 				case 't':
 					print_txpwrlist(iw, argv[1]);
 					break;
